[build-system]
requires = [
    "setuptools>=30.3.0",
    "wheel",
    "setuptools_scm>=3.3.1",
    "poetry-core>=1.0.0",
]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "trending-homebrew"
version = "0.1.0"
description = "Trending Homebrew"
authors = ["John Patrick Roach <contact@johnpatrickroach.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/johnpatrickroach/trending-homebrew"
repository = "https://github.com/johnpatrickroach/trending-homebrew"
documentation = "https://trending-homebrew.readthedocs.io"
classifiers = [
    "Development Status :: 4 - Beta",
]

[tool.poetry.urls]
Changelog = "https://github.com/johnpatrickroach/trending-homebrew/releases"

[tool.poetry.dependencies]
python = "^3.7"
click = ">=8.0.1"
importlib_metadata = {version = "^4.5.0", python = "<3.8"}
rich = "^10.14.0"
typer = {extras = ["all"], version = "^0.4.0"}

[tool.poetry.dev-dependencies]
Pygments = ">=2.10.0"
bandit = "^1.7.4"
black = {version = "^23.1a1", allow-prereleases = true}
coverage = {extras = ["toml"], version = "^7.0.3"}
coverage-badge = "^1.1.0"
darglint = ">=1.8.1"
flake8 = ">=4.0.1"
flake8-bandit = ">=2.1.2"
flake8-bugbear = ">=21.9.2"
flake8-docstrings = ">=1.6.0"
flake8-rst-docstrings = ">=0.2.5"
furo = ">=2021.11.12"
isort = {extras = ["colors"], version = "^5.11.4"}
myst-parser = {version = ">=0.16.1"}
mypy = "^0.991"
mypy-extensions = "^0.4.3"
pep8-naming = ">=0.12.1"
pre-commit = "^2.21.0"
pre-commit-hooks = ">=4.1.0"
pydocstyle = "^6.2.2"
pylint = "^2.15.9"
pytest = "^7.2.0"
pytest-html = "^3.2.0"
pytest-cov = "^4.0.0"
pyupgrade = "^3.3.1"
safety = "^2.3.5"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=3.0.2"
typeguard = ">=2.13.3"
xdoctest = {extras = ["colors"], version = ">=0.15.10"}

[tool.poetry.scripts]
trending-homebrew = "trending_homebrew.__main__:main"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["trending_homebrew", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2
known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
allow_redefinition = false
check_untyped_defs = true
color_output = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
strict = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.black]
line-length = 140
target-version = ['py37']
skip-string-normalization = true
color = true
exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]